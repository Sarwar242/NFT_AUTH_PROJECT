@page "/AddGrosoryList"
@using ModelClasses
@inject HttpClient _http
@inject NavigationManager _navigation

<h3>AddGroceryList</h3>
<div>
    <label>Select User</label>
    <select @bind="userName" style="width:30%;">
        <option value="0">Select A User</option>
        @foreach (var em in _employeeData)
        {
            <option value="@em.Designation_Id">@em.Designation_Name</option>
        }
    </select>
</div>
<br />
<div class="w-50">
    <div class="form-floating mb-3">
        <input type="text" class="form-control" id="floatingInput" placeholder="Item Name" @bind="_grocery.Item_Name">
        <label for="floatingInput">Item Name</label>
    </div>
    <div class="form-floating mb-3">
        <input type="number" class="form-control" id="floatingInput" placeholder="0.00" @bind="_grocery.Item_Price">
        <label for="floatingInput">Item Price</label>
    </div>
</div>
<button @onclick="AddGroceryData">Add</button>

@code {
    private GroceryList _grocery = new GroceryList();
    private List<DesignationModel> _employeeData = new List<DesignationModel>();
    private string userName = "0";

    protected override async Task OnInitializedAsync()
    {
        await GetEmployee();
    }

    private async Task GetEmployee()
    {
        _employeeData = await _http.GetFromJsonAsync<List<DesignationModel>>("AuthorizationProcess/GetAllEmployeeList");
    }

    private async Task AddGroceryData()
    {
        _grocery.Action_Status = "ADD";
        _grocery.Make_By = userName;
        _grocery.Item_Id = "";
        _grocery.Make_Date = "";

        var responce = await _http.PostAsJsonAsync("Grocery", _grocery);
        var err_msg = await responce.Content.ReadAsStringAsync();

        if (err_msg == "null" || string.IsNullOrEmpty(err_msg))
        {
            _grocery = new GroceryList();
            _navigation.NavigateTo("/GrosoryList");
        }
        else
        {
            Console.WriteLine(err_msg);
        }
    }
}
